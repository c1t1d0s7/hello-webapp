pipeline {
  agent {
    kubernetes {
yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: maven
    image: maven:3-openjdk-8
    command: ['sleep']
    args: ['infinity']
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command: ['sleep']
    args: ['infinity']
    volumeMounts:
    - name: registry-credentials
      mountPath: /kaniko/.docker
  volumes:
  - name: registry-credentials
    secret:
      secretName: regcred
      items:
      - key: .dockerconfigjson
        path: config.json
'''
    }
  }

  triggers {
    pollSCM '* * * * *'
  }

  parameters {
    string name: 'IMAGE_NAME', defaultValue: 'hello-world'
    string name: 'IMAGE_REGISTRY_ACCOUNT', defaultValue: 'c1t1d0s7'
  }

  stages {
    stage('SCM Checkout') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/c1t1d0s7/hello-webapp.git'
        }
      }
    }

    stage('Build Maven Project') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests=true'
        }
      }
    }

    stage('Test Maven Project') {
      steps {
        container('maven') {
          sh 'mvn test'
        }
      }
    }

    stage('Build & Tag Docker Image') {
      steps {
        container('kaniko') {
          sh "executor --dockerfile=Dockerfile \
            --context=dir://${env.WORKSPACE} \
            --destination=${params.IMAGE_REGISTRY_ACCOUNT}/${params.IMAGE_NAME}:${env.BUILD_NUMBER} \
            --destination=${params.IMAGE_REGISTRY_ACCOUNT}/${params.IMAGE_NAME}:latest"
        }
      }
    }

    stage('Update Kubernetes Manifests') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/c1t1d0s7/hello-kube.git'
          sh 'sed -i "s/image:.*/image: ${IMAGE_REGISTRY_ACCOUNT}\\/${IMAGE_NAME}:${BUILD_NUMBER}/g" deployment.yaml'
          sh 'grep image deployment.yaml'
          sh 'git add deployment.yaml'
          sh 'git config --global user.name Jang'
          sh 'git config --global user.email c1t1d0s7@gmail.com'
          sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
          withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) {
            sh 'git push origin main'
          }
        }
      }
    }

  }
}
